# Generated by Django 3.1.3 on 2020-11-29 04:43

import apps.c19trace.models.util
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='EntryPoint',
            fields=[
                ('name', models.CharField(max_length=128, primary_key=True, serialize=False, verbose_name='Name')),
                ('type', models.CharField(choices=[('agua', 'water'), ('aire', 'air'), ('tierra', 'Land')], help_text='options:\nagua: water\naire: air\ntierra: Land', max_length=64, verbose_name='Transportation mode')),
            ],
            options={
                'verbose_name': 'Entry point',
                'verbose_name_plural': 'Entry points',
                'db_table': 'c19t_entry_point',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='Person',
            fields=[
                ('id', models.CharField(default='__noid__', max_length=64, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField(default=apps.c19trace.models.util.thenow, verbose_name='Date/Time')),
                ('first_surname', models.CharField(max_length=48, verbose_name='First surname')),
                ('last_surname', models.CharField(max_length=48, verbose_name='Last surname')),
                ('names', models.CharField(max_length=64, verbose_name='Names')),
                ('gender', models.CharField(choices=[('Masculino', 'Male'), ('Femenino', 'Female'), ('Otro', 'Other')], help_text='options:\nMasculino: Male\nFemenino: Female\nOtro: Other', max_length=24, verbose_name='Gender')),
                ('birth_date', models.DateField(verbose_name='Birth date')),
                ('nationality', models.CharField(max_length=3, verbose_name='Nationality')),
                ('travel_document', models.CharField(choices=[('RUN', 'RUN'), ('pasaporte', 'Passport'), ('otro', 'Other')], help_text='options:\nRUN: RUN\npasaporte: Passport\notro: Other', max_length=16, verbose_name='Travel document')),
                ('document_no', models.CharField(max_length=128, verbose_name='Document Number')),
                ('residence', models.CharField(choices=[('Chile', 'Chile'), ('extranjero', 'Not Chile')], help_text='options:\nChile: Chile\nextranjero: Not Chile', max_length=24, verbose_name='Residence place')),
                ('residence_chile_region', models.CharField(max_length=2, null=True, verbose_name='Residence in Chile: Region')),
                ('residence_chile_comuna', models.CharField(max_length=64, null=True, verbose_name='Residence in Chile: Comuna')),
                ('residence_other_country', models.CharField(max_length=64, null=True, verbose_name='Residence outside Chile: Country')),
                ('residence_other_place', models.CharField(max_length=128, null=True, verbose_name='Residence outside Chile: Place')),
                ('email', models.CharField(max_length=128, verbose_name='Email')),
                ('mobile_phone', models.CharField(max_length=128, verbose_name='Mobile Phone')),
                ('previous_lodging_place', models.CharField(max_length=128, verbose_name='Previous lodging place')),
                ('visit_subject', models.CharField(max_length=128, verbose_name='Visit subject')),
                ('visit_no', models.IntegerField(verbose_name='Visit number')),
                ('transportation_mode', models.CharField(choices=[('agua', 'water'), ('aire', 'air'), ('tierra', 'Land')], help_text='options:\nagua: water\naire: air\ntierra: Land', max_length=8, verbose_name='Transportation mode')),
                ('destination', models.IntegerField(verbose_name='Destination')),
                ('main_transportation_mean', models.CharField(choices=[('Motocicleta', 'Motorcycle'), ('Bicicleta', 'Bycicle'), ('Auto/Jeep/Camioneta', 'Car/Jeep/Pickup truck'), ('Motorhome/Casa Rodante', 'Motorhome'), ('Bus', 'Bus'), ('Cami칩n', 'Truck')], help_text='options:\nMotocicleta: Motorcycle\nBicicleta: Bycicle\nAuto/Jeep/Camioneta: Car/Jeep/Pickup truck\nMotorhome/Casa Rodante: Motorhome\nBus: Bus\nCami칩n: Truck\n* Also can be filled with custom entry', max_length=64, verbose_name='Main transportation mean')),
                ('contact_name', models.CharField(max_length=128, verbose_name='Contact Name')),
                ('contact_relationship', models.CharField(choices=[('abuelo/a', 'Grandparent'), ('amigo/a', 'Friend'), ('colega', 'Colegue'), ('cu침ado/a', 'Sibling in law'), ('hermano/a', 'sibling'), ('hijo/a', 'Child'), ('nieto/a', 'Grandchild'), ('padre/madre', 'Parent'), ('primo/a', 'Cousin'), ('sobrino/a', 'Nephew'), ('suegro/a', 'Parent in law'), ('tio/a', 'Uncle/aunt')], help_text='options:\nabuelo/a: Grandparent\namigo/a: Friend\ncolega: Colegue\ncu침ado/a: Sibling in law\nhermano/a: sibling\nhijo/a: Child\nnieto/a: Grandchild\npadre/madre: Parent\nprimo/a: Cousin\nsobrino/a: Nephew\nsuegro/a: Parent in law\ntio/a: Uncle/aunt\n* Also can be filled with custom entry', max_length=24, verbose_name='Contact replationship')),
                ('contact_phone_or_email', models.CharField(max_length=24, verbose_name='Contact phone or email')),
                ('contact_comuna', models.CharField(blank=True, max_length=24, null=True, verbose_name='Contact comuna')),
                ('contact_localidad', models.CharField(blank=True, max_length=24, null=True, verbose_name='Contact localidad')),
                ('entry_point', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='c19trace.entrypoint', verbose_name='Entry point')),
            ],
            options={
                'verbose_name': 'Person',
                'verbose_name_plural': 'Person',
                'db_table': 'c19t_persons',
                'ordering': ('names', 'first_surname', 'last_surname'),
            },
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('place_type', models.IntegerField(choices=[(1, 'Turistic service'), (2, 'Turist attraction'), (3, 'Turistic information office'), (4, 'Health place'), (5, 'Check point municipal'), (6, 'Sanitary check point '), (7, 'Border crossing')], help_text='options:\n1: Turistic service\n2: Turist attraction\n3: Turistic information office\n4: Health place\n5: Check point municipal\n6: Sanitary check point \n7: Border crossing', max_length=128, verbose_name='Entity type')),
                ('turistic_info_office_type', models.CharField(choices=[('SERNATUR', 'SERNATUR'), ('MUNICIPAL', 'MUNICIPAL'), ('GREMIO', 'GREMIO')], help_text='options:\nSERNATUR: SERNATUR\nMUNICIPAL: MUNICIPAL\nGREMIO: GREMIO', max_length=16, verbose_name='Turistic information office type')),
                ('rut', models.CharField(max_length=15, verbose_name='RUT Entity')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('comuna', models.CharField(max_length=128, verbose_name='Comuna')),
                ('localidad', models.CharField(max_length=128, null=True, verbose_name='Localidad')),
                ('zone', models.CharField(max_length=98, null=True, verbose_name='Zone')),
                ('address', models.CharField(max_length=128, null=True, verbose_name='Address')),
                ('representative_name', models.CharField(max_length=128, verbose_name='Representative: Name')),
                ('representative_position', models.CharField(max_length=128, verbose_name='Representative: Position')),
                ('representative_phone', models.CharField(max_length=45, verbose_name='Representative: Phone')),
                ('representative_mail', models.CharField(max_length=128, verbose_name='Representative: Mail')),
            ],
            options={
                'verbose_name': 'Place entity',
                'verbose_name_plural': 'Place entities',
                'db_table': 'c19t_place_entity',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TuristicServiceType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, verbose_name='Name')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
            ],
            options={
                'verbose_name': 'Service type',
                'verbose_name_plural': 'Service types',
                'db_table': 'c19t_turistic_service_types',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='UserPlace',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_owner', models.BooleanField(verbose_name='Is owner')),
                ('place', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='c19trace.place', verbose_name='Place')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='User')),
            ],
            options={
                'verbose_name': 'User place',
                'verbose_name_plural': 'Uer places',
                'db_table': 'c19t_user_place',
                'ordering': ('place__name',),
            },
        ),
        migrations.CreateModel(
            name='UnderagePerson',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gender', models.CharField(choices=[('Masculino', 'Male'), ('Femenino', 'Female'), ('Otro', 'Other')], help_text='options:\nMasculino: Male\nFemenino: Female\nOtro: Other', max_length=24, verbose_name='Gender')),
                ('name', models.CharField(max_length=128, verbose_name='Name')),
                ('birth_date', models.DateField(verbose_name='Birth date')),
                ('relationship', models.CharField(choices=[('amigo/a', 'Friend'), ('colega', 'Colegue'), ('cu침ado/a', 'Sibling in law'), ('hermano/a', 'sibling'), ('hijo/a', 'Child'), ('nieto/a', 'Grandchild'), ('primo/a', 'Cousin'), ('sobrino/a', 'Nephew')], help_text='options:\namigo/a: Friend\ncolega: Colegue\ncu침ado/a: Sibling in law\nhermano/a: sibling\nhijo/a: Child\nnieto/a: Grandchild\nprimo/a: Cousin\nsobrino/a: Nephew\n* Also can be filled with custom entry', max_length=24, verbose_name='Contact replationship')),
                ('related_to', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='underage_persons', to='c19trace.person')),
            ],
            options={
                'verbose_name': 'Underage person',
                'verbose_name_plural': 'Underage persons',
                'db_table': 'c19t_underage_person',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='TuristicServiceClass',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=96, verbose_name='Name')),
                ('enabled', models.BooleanField(default=True, verbose_name='Enabled')),
                ('type', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='c19trace.servicetype', verbose_name='Service type')),
            ],
            options={
                'verbose_name': 'Service class',
                'verbose_name_plural': 'Service classes',
                'db_table': 'c19t_turistic_service_classes',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='place',
            name='service_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='c19trace.servicetype', verbose_name='Service type'),
        ),
        migrations.AddField(
            model_name='place',
            name='users',
            field=models.ManyToManyField(related_name='places', through='c19trace.UserPlace', to=settings.AUTH_USER_MODEL, verbose_name='Users'),
        ),
    ]
